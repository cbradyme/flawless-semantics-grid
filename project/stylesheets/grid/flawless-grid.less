//Flawless-Semantics adapted by Sean Steindl from the Semantic.gs
///////////
// GRID SPECIFIC CALCULATIONS
//////////

// Utility variable - you should never need to modify this (note the one less gutter than in the original grid)
@gridsystem-width: (@column-width*@columns) + (@gutter-width*(@columns - 1))* 1px;

// Set @total-width to 100% for a fluid layout
@total-width: @gridsystem-width;

// gutter widths for columns
@column-gutter-width: @total-width*((@gutter-width)/@gridsystem-width);

//////////
// ROWS //
//////////
// Margin-based rows
.row(@columns:@columns) {
	@calculated-row-width: (@total-width*((@gutter-width + @gridsystem-width)-@gutter-width)/@gridsystem-width);
	width: @calculated-row-width;
	display: block;
	.clearfix;
}

/////////////
// COLUMNS //
/////////////
// column - specified width
.column(@x,@columns:@columns,@omega:null) {
	@calculated-column-width: @total-width*((((@gutter-width+@column-width)*@x)-@gutter-width) / @gridsystem-width);
		display: inline;
		float: left;
		width: @calculated-column-width;
		margin-left:0;
		margin-right: @column-gutter-width;
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
		&:last-child{ // make sure the last child's gutters are removed
			margin-right: 0;
		}
		.single-col(@x,@columns) when (@x=@columns)	{ // check for a single column and remove gutters accordingly
			margin-right: 0;
		}
	.single-col(@x,@columns) {}
	.single-col(@x,@columns);
		.omega(@x:@x,@columns:@columns,auto) {
			@nth: @columns / @x;
			@nselector:~"@{nth}n+0";  // less.js v 1.4 may remove the need for this
			&:nth-child(@nselector) {
				margin-right: 0;
				}
			}
		.omega(@x,@columns,omega){
			margin-right: 0;
			}
		.omega(@x,@columns,null) {}
	.omega(@x,@columns,@omega);
}

/////////////////
// PUSH //
/////////////////

.push(@offset:1,@columns:@columns)  {
	@calculated-column-width: @total-width*((((@gutter-width+@column-width)*@offset)-@gutter-width) / @gridsystem-width);
	@offset-amount:@calculated-column-width+@column-gutter-width;
	padding-left: 0;
	margin-left: @offset-amount;
}